name: Build workflow - Forwarder
on: 
  push:
    branches:
      - master
    paths:
      - .github/workflows/build-forwarder.yml
      - AKSKubeAuditReceiverSolution/**
  pull_request:
    branches:
      - master
    paths:
      - .github/workflows/build-forwarder.yml
      - AKSKubeAuditReceiverSolution/**
  workflow_dispatch:
  release:
    types:
      - published

jobs:

  check_yaml:
    name: YAML lint check
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: 'Yaml lint'
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_file_or_dir: './*.yaml*'
          yamllint_strict: false
          yamllint_comment: true
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_dotnet:
    name: .NET lint, test and build check
    runs-on: ubuntu-16.04
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Create Dotnet environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100' # SDK Version to use.
      - name: Restore cached nuget packages
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Dotnet lint install dotnet-format for linting
        run: dotnet tool install -g dotnet-format --version 3.3.111304
      - name: Dotnet lint install report generator
        uses: xt0rted/dotnet-format-problem-matcher@v1
      - name: Dotnet lint check with dotnet-format
        run: dotnet format --folder AKSKubeAuditReceiverSolution/ --check --dry-run || true
      - name: Dotnet build solution
        run: dotnet build AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver.sln
      - name: Dotnet test solution
        run: dotnet test AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver.sln

  sysdig_dockerfile_cis_benchmark:
    name: Sysdig Dockerfile CIS benchmark
    needs: [check_yaml, check_dotnet]
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Sysdig CIS dockerfile benchmark
        uses: sysdiglabs/benchmark-dockerfile@v1.0.0
        id: cis_dockerfile_benchmark
        with:
          directory: './AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver/'
          dockerfilePattern: 'Dockerfile'
          disallowedPackages: 'netcat'
          secretPatterns: 'aws_secret,pass'    
      - name: Post run Sysdig CIS dockerfile benchmark
        env:
          SYSDIG_SECURE_TOKEN: ${{ secrets.KUBELAB_SECURE_API_TOKEN }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_SHA: ${{ github.event.pull_request.head.sha }}
          PR_OWNER: ${{ github.event.pull_request.head.user.login }}
        run: |
          echo "###"
          echo "{\"pr_name\": \"${PR_TITLE}\", \"pr_sha\": \"${PR_SHA}\", \"pr_owner\": \"${PR_OWNER}\"}" > /tmp/report.json
          echo ${{ toJSON(steps.cis_dockerfile_benchmark.outputs.violation_report) }} > /tmp/report
          reportString=$(sed 's/"/\\"/g' /tmp/report)
          echo $reportString
          
          # send result to Sysdig monitor
          curl -X POST -s https://app.sysdigcloud.com/api/events -H 'Content-Type: application/json; charset=UTF-8' -H 'Authorization: Bearer '"${SYSDIG_SECURE_TOKEN}"'' -d '{"event":{"name":"CIS Dockerfile Benchmark - PR: '"${PR_TITLE}"' ","description":"'"${reportString}"'","severity":"6"}}' --compressed
          echo "###"

  sysdig_image_scan:
    name: Sysdig image scan
    needs: [check_yaml, check_dotnet]
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2      
      - name: Build the Docker image
        run: |
          docker build -f ./AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver/Dockerfile \
            ./AKSKubeAuditReceiverSolution --tag sysdiglabs/aks-audit-log-forwarder
      - name: Scan image
        id: scan
        uses: sysdiglabs/scan-action@v3
        with:
          image-tag: "sysdiglabs/aks-audit-log-forwarder"
          sysdig-secure-token: ${{ secrets.KUBELAB_SECURE_API_TOKEN }}
          input-type: docker-daemon
          run-as-user: root
      - uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: ${{ steps.scan.outputs.sarifReport }}

  publish_image:
    name: Publish container image to registries
    needs: [sysdig_image_scan]
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Prepare version labels
        id: prepare_version_labels
        env:
          VERSION_TAG: ${{ github.event.release.tag_name }}
        run: |
          echo "Version tag: $VERSION_TAG"
          VERSION_MAJOR=$(echo $VERSION_TAG | sed 's/v\([0-9]*\).*/\1/' )
          VERSION_FULL=$(echo $VERSION_TAG | sed 's/v\([0-9][0-9\.]*\).*/\1/' )
          [ -z $VERSION_TAG ] && VERSION_FULL="master"
          [ -z $VERSION_FULL ] && VERSION_FULL="master"
          [ -z $VERSION_MAJOR ] && VERSION_MAJOR="dev"
          echo "Version major: $VERSION_MAJOR"
          echo "Version full: $VERSION_FULL"
          echo "::set-output name=VERSION_MAJOR::$VERSION_MAJOR"
          echo "::set-output name=VERSION_FULL::$VERSION_FULL"
      - name: Build and push Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: AKSKubeAuditReceiverSolution/
          file: AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            sysdiglabs/aks-audit-log-forwarder:latest
            sysdiglabs/aks-audit-log-forwarder:${{ steps.prepare_version_labels.outputs.VERSION_MAJOR }}
            sysdiglabs/aks-audit-log-forwarder:${{ steps.prepare_version_labels.outputs.VERSION_FULL }}
      - name: Login to GitHub Container Registry
        if: github.event_name == 'release'
        uses: docker/login-action@v1 
        with:
          registry: docker.pkg.github.com
          username: ${{ secrets.CR_PAT_PKG_USER }}
          password: ${{ secrets.CR_PAT_PKG }}
      - name: Build and Push to GitHub Packages
        if: github.event_name == 'release'
        run: |
          docker build ${CONTEXT_PATH} -f ${DOCKERFILE_PATH} \
            -t docker.pkg.github.com/${GH_REPO}/${IMAGE_NAME}:${VERSION_FULL}
          docker push \
               docker.pkg.github.com/${GH_REPO}/${IMAGE_NAME}:${VERSION_FULL}
        env:
          IMAGE_NAME: aks-audit-log-forwarder
          CONTEXT_PATH: AKSKubeAuditReceiverSolution/
          DOCKERFILE_PATH: AKSKubeAuditReceiverSolution/AKSKubeAuditReceiver/Dockerfile
          VERSION_FULL: ${{ steps.prepare_version_labels.outputs.VERSION_FULL }}
          GH_REPO: sysdiglabs/aks-audit-log
          